// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QIMSchoolPro.Hostel.Persistence;

#nullable disable

namespace QIMSchoolPro.Hostel.Persistence.Migrations
{
    [DbContext(typeof(HostelDbContext))]
    [Migration("20241002201115_Updatebeds")]
    partial class Updatebeds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Bed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BedNumber")
                        .HasColumnType("int");

                    b.Property<int>("BedPosition")
                        .HasColumnType("int");

                    b.Property<int>("BedType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bed", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderOption")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerShipType")
                        .HasColumnType("int");

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Building", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Floor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Floor", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FloorId")
                        .HasColumnType("int");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FloorId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("RoomType", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Bed", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("BedId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BedId");

                            b1.ToTable("Bed");

                            b1.WithOwner()
                                .HasForeignKey("BedId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Building", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("BuildingId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BuildingId");

                            b1.ToTable("Building");

                            b1.WithOwner()
                                .HasForeignKey("BuildingId");
                        });

                    b.OwnsOne("QIMSchoolPro.Hostel.Domain.Entities.Geolocation", "Geolocation", b1 =>
                        {
                            b1.Property<int>("BuildingId")
                                .HasColumnType("int");

                            b1.Property<string>("Latitude")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Latitude");

                            b1.Property<string>("Longitude")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Longitude");

                            b1.HasKey("BuildingId");

                            b1.ToTable("Building");

                            b1.WithOwner()
                                .HasForeignKey("BuildingId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Geolocation")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Floor", b =>
                {
                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("FloorId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FloorId");

                            b1.ToTable("Floor");

                            b1.WithOwner()
                                .HasForeignKey("FloorId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Room", b =>
                {
                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Floor", "Floor")
                        .WithMany()
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("RoomId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RoomId");

                            b1.ToTable("Room");

                            b1.WithOwner()
                                .HasForeignKey("RoomId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Floor");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.RoomType", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("RoomTypeId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RoomTypeId");

                            b1.ToTable("RoomType");

                            b1.WithOwner()
                                .HasForeignKey("RoomTypeId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
