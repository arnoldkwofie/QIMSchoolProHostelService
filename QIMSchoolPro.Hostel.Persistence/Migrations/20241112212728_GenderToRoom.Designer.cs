// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QIMSchoolPro.Hostel.Persistence;

#nullable disable

namespace QIMSchoolPro.Hostel.Persistence.Migrations
{
    [DbContext(typeof(HostelDbContext))]
    [Migration("20241112212728_GenderToRoom")]
    partial class GenderToRoom
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.AcademicConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AcademicConfiguration", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Amenity", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Bed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BedNumber")
                        .HasColumnType("int");

                    b.Property<int>("BedPosition")
                        .HasColumnType("int");

                    b.Property<int>("BedStatus")
                        .HasColumnType("int");

                    b.Property<int>("BedType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bed", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BedId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderOption")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerShipType")
                        .HasColumnType("int");

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Building", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Campus", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Certificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranscriptCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Certificate", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolCentreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolCentreId");

                    b.ToTable("Faculty", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Floor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Floor", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hall", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisabilityReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDisability")
                        .HasColumnType("bit");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartyType")
                        .HasColumnType("int");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Party", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Programme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CertificateId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("IndexNumberPrefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgrammeCourseRegistrationType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CertificateId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Programme", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookedBeds")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FloorId")
                        .HasColumnType("int");

                    b.Property<int>("GenderOption")
                        .HasColumnType("int");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FloorId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.RoomFilter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("Section")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomFilter", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("RoomType", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.RoomTypeAmenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.Property<bool>("Availabilty")
                        .HasColumnType("bit");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmenityId");

                    b.ToTable("RoomTypeAmenity", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.SchoolCentre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.ToTable("SchoolCentre", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Student", b =>
                {
                    b.Property<string>("StudentNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AffiliatedHallId")
                        .HasColumnType("int");

                    b.Property<long?>("ApplicantId")
                        .HasColumnType("bigint");

                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HallId")
                        .HasColumnType("int");

                    b.Property<string>("IndexNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProperty1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentProgrammeCategory")
                        .HasColumnType("int");

                    b.Property<int>("StudentSection")
                        .HasColumnType("int");

                    b.Property<int?>("StudentStatus")
                        .HasColumnType("int");

                    b.Property<string>("StudentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentNumber");

                    b.HasIndex("HallId");

                    b.HasIndex("PartyId");

                    b.HasIndex("ProgrammeId");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.AcademicConfiguration", b =>
                {
                    b.OwnsOne("QIMSchoolPro.Hostel.Domain.ValueObjects.AcademicPeriod", "AcademicPeriod", b1 =>
                        {
                            b1.Property<int>("AcademicConfigurationId")
                                .HasColumnType("int");

                            b1.Property<int>("LowerYear")
                                .HasColumnType("int");

                            b1.Property<int>("Semester")
                                .HasColumnType("int");

                            b1.Property<int>("UpperYear")
                                .HasColumnType("int");

                            b1.HasKey("AcademicConfigurationId");

                            b1.ToTable("AcademicConfiguration");

                            b1.WithOwner()
                                .HasForeignKey("AcademicConfigurationId");
                        });

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("AcademicConfigurationId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AcademicConfigurationId");

                            b1.ToTable("AcademicConfiguration");

                            b1.WithOwner()
                                .HasForeignKey("AcademicConfigurationId");
                        });

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.AcademicPeriodActivity", "OngoingActivity", b1 =>
                        {
                            b1.Property<int>("AcademicConfigurationId")
                                .HasColumnType("int");

                            b1.Property<bool>("LecturerAssessment")
                                .HasColumnType("bit");

                            b1.Property<bool>("SemesterRegistration")
                                .HasColumnType("bit");

                            b1.Property<bool>("ShowResult")
                                .HasColumnType("bit");

                            b1.HasKey("AcademicConfigurationId");

                            b1.ToTable("AcademicConfiguration");

                            b1.WithOwner()
                                .HasForeignKey("AcademicConfigurationId");
                        });

                    b.Navigation("AcademicPeriod")
                        .IsRequired();

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("OngoingActivity")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Amenity", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("AmenityId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AmenityId");

                            b1.ToTable("Amenity");

                            b1.WithOwner()
                                .HasForeignKey("AmenityId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Bed", b =>
                {
                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Room", "Room")
                        .WithMany("Beds")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("BedId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BedId");

                            b1.ToTable("Bed");

                            b1.WithOwner()
                                .HasForeignKey("BedId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Booking", b =>
                {
                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Bed", "Bed")
                        .WithMany()
                        .HasForeignKey("BedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("QIMSchoolPro.Hostel.Domain.ValueObjects.AcademicPeriod", "AcademicPeriod", b1 =>
                        {
                            b1.Property<int>("BookingId")
                                .HasColumnType("int");

                            b1.Property<int>("LowerYear")
                                .HasColumnType("int");

                            b1.Property<int>("Semester")
                                .HasColumnType("int");

                            b1.Property<int>("UpperYear")
                                .HasColumnType("int");

                            b1.HasKey("BookingId");

                            b1.ToTable("Booking");

                            b1.WithOwner()
                                .HasForeignKey("BookingId");
                        });

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("BookingId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BookingId");

                            b1.ToTable("Booking");

                            b1.WithOwner()
                                .HasForeignKey("BookingId");
                        });

                    b.Navigation("AcademicPeriod");

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Bed");
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Building", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("BuildingId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BuildingId");

                            b1.ToTable("Building");

                            b1.WithOwner()
                                .HasForeignKey("BuildingId");
                        });

                    b.OwnsOne("QIMSchoolPro.Hostel.Domain.Entities.Geolocation", "Geolocation", b1 =>
                        {
                            b1.Property<int>("BuildingId")
                                .HasColumnType("int");

                            b1.Property<string>("Latitude")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Latitude");

                            b1.Property<string>("Longitude")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Longitude");

                            b1.HasKey("BuildingId");

                            b1.ToTable("Building");

                            b1.WithOwner()
                                .HasForeignKey("BuildingId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Geolocation")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Campus", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("CampusId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CampusId");

                            b1.ToTable("Campus");

                            b1.WithOwner()
                                .HasForeignKey("CampusId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Certificate", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("CertificateId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CertificateId");

                            b1.ToTable("Certificate");

                            b1.WithOwner()
                                .HasForeignKey("CertificateId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Department", b =>
                {
                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("DepartmentId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DepartmentId");

                            b1.ToTable("Department");

                            b1.WithOwner()
                                .HasForeignKey("DepartmentId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Faculty", b =>
                {
                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.SchoolCentre", "SchoolCentre")
                        .WithMany()
                        .HasForeignKey("SchoolCentreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("FacultyId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FacultyId");

                            b1.ToTable("Faculty");

                            b1.WithOwner()
                                .HasForeignKey("FacultyId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("SchoolCentre");
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Floor", b =>
                {
                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Building", "Building")
                        .WithMany("Floors")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("FloorId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FloorId");

                            b1.ToTable("Floor");

                            b1.WithOwner()
                                .HasForeignKey("FloorId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Hall", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("HallId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("HallId");

                            b1.ToTable("Hall");

                            b1.WithOwner()
                                .HasForeignKey("HallId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Party", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("PartyId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PartyId");

                            b1.ToTable("Party");

                            b1.WithOwner()
                                .HasForeignKey("PartyId");
                        });

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.EmailAddressValueType", "OtherEmailAddress", b1 =>
                        {
                            b1.Property<int>("PartyId")
                                .HasColumnType("int");

                            b1.HasKey("PartyId");

                            b1.ToTable("Party");

                            b1.WithOwner()
                                .HasForeignKey("PartyId");

                            b1.OwnsOne("Qface.Domain.Shared.ValueObjects.Email", "Email", b2 =>
                                {
                                    b2.Property<int>("EmailAddressValueTypePartyId")
                                        .HasColumnType("int");

                                    b2.Property<string>("EmailType")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Value")
                                        .ValueGeneratedOnUpdateSometimes()
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("Email");

                                    b2.HasKey("EmailAddressValueTypePartyId");

                                    b2.ToTable("Party");

                                    b2.WithOwner()
                                        .HasForeignKey("EmailAddressValueTypePartyId");
                                });

                            b1.Navigation("Email")
                                .IsRequired();
                        });

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.PhoneNumberValueType", "OtherPhoneNumber", b1 =>
                        {
                            b1.Property<int>("PartyId")
                                .HasColumnType("int");

                            b1.Property<int>("PhoneNumberType")
                                .HasColumnType("int");

                            b1.HasKey("PartyId");

                            b1.ToTable("Party");

                            b1.WithOwner()
                                .HasForeignKey("PartyId");

                            b1.OwnsOne("Qface.Domain.Shared.ValueObjects.Phone", "Phone", b2 =>
                                {
                                    b2.Property<int>("PhoneNumberValueTypePartyId")
                                        .HasColumnType("int");

                                    b2.Property<string>("CountryCode")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Number")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("PhoneNumberValueTypePartyId");

                                    b2.ToTable("Party");

                                    b2.WithOwner()
                                        .HasForeignKey("PhoneNumberValueTypePartyId");
                                });

                            b1.Navigation("Phone")
                                .IsRequired();
                        });

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.EmailAddressValueType", "PrimaryEmailAddress", b1 =>
                        {
                            b1.Property<int>("PartyId")
                                .HasColumnType("int");

                            b1.HasKey("PartyId");

                            b1.ToTable("Party");

                            b1.WithOwner()
                                .HasForeignKey("PartyId");

                            b1.OwnsOne("Qface.Domain.Shared.ValueObjects.Email", "Email", b2 =>
                                {
                                    b2.Property<int>("EmailAddressValueTypePartyId")
                                        .HasColumnType("int");

                                    b2.Property<string>("EmailType")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Value")
                                        .ValueGeneratedOnUpdateSometimes()
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("Email");

                                    b2.HasKey("EmailAddressValueTypePartyId");

                                    b2.ToTable("Party");

                                    b2.WithOwner()
                                        .HasForeignKey("EmailAddressValueTypePartyId");
                                });

                            b1.Navigation("Email")
                                .IsRequired();
                        });

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.PhoneNumberValueType", "PrimaryPhoneNumber", b1 =>
                        {
                            b1.Property<int>("PartyId")
                                .HasColumnType("int");

                            b1.Property<int>("PhoneNumberType")
                                .HasColumnType("int");

                            b1.HasKey("PartyId");

                            b1.ToTable("Party");

                            b1.WithOwner()
                                .HasForeignKey("PartyId");

                            b1.OwnsOne("Qface.Domain.Shared.ValueObjects.Phone", "Phone", b2 =>
                                {
                                    b2.Property<int>("PhoneNumberValueTypePartyId")
                                        .HasColumnType("int");

                                    b2.Property<string>("CountryCode")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Number")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("PhoneNumberValueTypePartyId");

                                    b2.ToTable("Party");

                                    b2.WithOwner()
                                        .HasForeignKey("PhoneNumberValueTypePartyId");
                                });

                            b1.Navigation("Phone")
                                .IsRequired();
                        });

                    b.OwnsOne("QIMSchoolPro.Hostel.Domain.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int>("PartyId")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("OtherName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Sex")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PartyId");

                            b1.ToTable("Party");

                            b1.WithOwner()
                                .HasForeignKey("PartyId");
                        });

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.AddressLine", "AddressLine", b1 =>
                        {
                            b1.Property<int>("PartyId")
                                .HasColumnType("int");

                            b1.Property<int?>("AddressType")
                                .HasColumnType("int");

                            b1.Property<int?>("CityId")
                                .HasColumnType("int");

                            b1.Property<string>("CityText")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CountryId")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("DistrictId")
                                .HasColumnType("int");

                            b1.Property<string>("GhanaPostCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("HomeTown")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line3")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line4")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("RegionId")
                                .HasColumnType("int");

                            b1.HasKey("PartyId");

                            b1.ToTable("Party");

                            b1.WithOwner()
                                .HasForeignKey("PartyId");
                        });

                    b.Navigation("AddressLine")
                        .IsRequired();

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("OtherEmailAddress")
                        .IsRequired();

                    b.Navigation("OtherPhoneNumber")
                        .IsRequired();

                    b.Navigation("PrimaryEmailAddress")
                        .IsRequired();

                    b.Navigation("PrimaryPhoneNumber")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Programme", b =>
                {
                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Certificate", "Certificate")
                        .WithMany()
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("ProgrammeId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProgrammeId");

                            b1.ToTable("Programme");

                            b1.WithOwner()
                                .HasForeignKey("ProgrammeId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Certificate");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Room", b =>
                {
                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Floor", "Floor")
                        .WithMany("Rooms")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("RoomId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RoomId");

                            b1.ToTable("Room");

                            b1.WithOwner()
                                .HasForeignKey("RoomId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Floor");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.RoomFilter", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("RoomFilterId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RoomFilterId");

                            b1.ToTable("RoomFilter");

                            b1.WithOwner()
                                .HasForeignKey("RoomFilterId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.RoomType", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("RoomTypeId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RoomTypeId");

                            b1.ToTable("RoomType");

                            b1.WithOwner()
                                .HasForeignKey("RoomTypeId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.RoomTypeAmenity", b =>
                {
                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Amenity", "Amenity")
                        .WithMany()
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("RoomTypeAmenityId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RoomTypeAmenityId");

                            b1.ToTable("RoomTypeAmenity");

                            b1.WithOwner()
                                .HasForeignKey("RoomTypeAmenityId");
                        });

                    b.Navigation("Amenity");

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.SchoolCentre", b =>
                {
                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("SchoolCentreId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SchoolCentreId");

                            b1.ToTable("SchoolCentre");

                            b1.WithOwner()
                                .HasForeignKey("SchoolCentreId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Campus");
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Student", b =>
                {
                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Hall", "Hall")
                        .WithMany()
                        .HasForeignKey("HallId");

                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QIMSchoolPro.Hostel.Domain.Entities.Programme", "Programme")
                        .WithMany()
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<string>("StudentNumber")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("StudentNumber");

                            b1.ToTable("Student");

                            b1.WithOwner()
                                .HasForeignKey("StudentNumber");
                        });

                    b.OwnsOne("QIMSchoolPro.Hostel.Domain.ValueObjects.Guardian", "Guardian", b1 =>
                        {
                            b1.Property<string>("StudentNumber")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<bool?>("IsUniversityStaff")
                                .HasColumnType("bit");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("OccupationId")
                                .HasColumnType("int");

                            b1.Property<int?>("RelationshipToStudentId")
                                .HasColumnType("int");

                            b1.Property<string>("StaffPosition")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("StudentNumber");

                            b1.ToTable("Student");

                            b1.WithOwner()
                                .HasForeignKey("StudentNumber");
                        });

                    b.OwnsOne("QIMSchoolPro.Hostel.Domain.ValueObjects.YearGroup", "YearGroup", b1 =>
                        {
                            b1.Property<string>("StudentNumber")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("AdmittedYear")
                                .HasColumnType("int");

                            b1.Property<int>("ClassYear")
                                .HasColumnType("int");

                            b1.HasKey("StudentNumber");

                            b1.ToTable("Student");

                            b1.WithOwner()
                                .HasForeignKey("StudentNumber");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Guardian")
                        .IsRequired();

                    b.Navigation("Hall");

                    b.Navigation("Party");

                    b.Navigation("Programme");

                    b.Navigation("YearGroup")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Building", b =>
                {
                    b.Navigation("Floors");
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Floor", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("QIMSchoolPro.Hostel.Domain.Entities.Room", b =>
                {
                    b.Navigation("Beds");
                });
#pragma warning restore 612, 618
        }
    }
}
